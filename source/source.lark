x == freeze 1
spam != ham

theory is String
theory is not String

foo: if expression { break foo }

async function f { await call() }

generator foo { yield }
generator foo { return }

"outer: \(  "inner: \(  "innermost: \( boogie + woogie )"  ) 2"  ) 1"

dance: while x while y {
    function { moves: for thing from otherThing { break moves } }
}

for each in range { breakfast() }

function (foo) of x, y { return 1 }
function foo of x, y { return 1 }
function of x, y { return 1 }
throw new Foo()
dev if x { Y }
dev 1 + 2 * 3 + 3
pack new foo(x, y, z)
seal new foo
freeze 1 + 2 when x * y else spam + eggs
o is packed
o is sealed
o is frozen
o is not packed
o is not sealed
o is not frozen
lambda x, y, args... { return x + y / args }

